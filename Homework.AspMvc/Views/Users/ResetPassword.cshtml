@using Homework.AspNetCoreMvc.Models;
@using Homework.AspNetCoreMvc.Utils
@{
    Layout = null;
    ViewData["Title"] = "Reset password";
}
@inject IHttpContextAccessor HttpContextAccessor;
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration;

<!DOCTYPE html>
<html>
<head>
    @{
        var theme = HttpContextAccessor.HttpContext.Request.Cookies["theme"];
        var defaultTheme = "dx.material.blue.light.compact.css";

        var currentLayout = string.IsNullOrWhiteSpace(theme) ? defaultTheme : theme;
    }
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>Reset password</title>
    <link href="~/css/devextreme/theme.base.css" rel="stylesheet" />
    <link href="~/css/devextreme/theme.additional.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/Site.css" />
    <link rel="stylesheet" href="~/css/app/app.css" />
    <script src="~/js/devextreme/jquery.js"></script>
    <script src="~/js/devextreme/dx.all.js"></script>
    <script src="~/js/devextreme/aspnet/dx.aspnet.mvc.js"></script>
    <script src="~/js/devextreme/aspnet/dx.aspnet.data.js"></script>
    <link href="~/css/devextreme/@currentLayout" rel="stylesheet" />
    <script src="~/js/app/app.js"></script>
</head>
<body class="dx-viewport" id="pageBody">
    <main>
        <section>
            <div class="content">
                @using (Html.BeginForm("RequireResetPassword", "Users", FormMethod.Post, new { id = "ResetPasswordForm" }))
                {
                    <input type="hidden" id="ValidationGroupField" name="ValidationGroupField" value="" />

                    using (Html.DevExtreme().ValidationGroup())
                    {
                        var resetPasswordLbl = "Reset password";
                        @Html.AntiForgeryToken()
                        @(
                                Html.DevExtreme().Form<ResetPasswordViewModel>()
                                .ID("form")
                                .ColCount(1)
                                .OnInitialized("onInitialized")
                                .ValidationGroup("LoginValidation")
                                .Width(400)
                                .Height(400)
                                .Items(items =>
                                {
                                    items.AddGroup()
                                .Caption(resetPasswordLbl)
                                .ColCount(1)
                                .Items(groupItems =>
                                {
                                    groupItems.AddSimpleFor(m => m.Email)
                                        .ValidationRules(r => r.AddRequired().Message("Email is required field."))
                                        .Label(p => p.Text("Email"))
                                        .Editor(e => 
                                         e.TextBox()
                                        .InputAttr("aria-label", "Email")
                                        .Mode(TextBoxMode.Email)
                                        .ValidationMessagePosition(Position.Bottom)
                                        .OnInitialized("FocusEditor"));
                                });

                                var submitResetPasswordBtn = "Submit";

                                items.AddButton()
                                    .HorizontalAlignment(HorizontalAlignment.Left)
                                    .ButtonOptions(b => b.Text(submitResetPasswordBtn)
                                    .Height(40)
                                    .Width(180)
                                    .ElementAttr(new JS("{ class: 'btn' }"))
                                    .Type(ButtonType.Default)
                                    .OnClick("setValidationGroup('LoginValidation')")
                                    .UseSubmitBehavior(true)
                                    .ValidationGroup("LoginValidation")
                                );
                                })
                            .FormData(Model)
                            )
                    }
                }
            </div>
        </section>
    </main>
</body>
</html>

<script>
    function setValidationGroup(groupName) {
        document.getElementById('ValidationGroupField').value = groupName;
    }
</script>
